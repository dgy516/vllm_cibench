# Example functional suite config for vLLM (enable by pointing env var):
#   export VLLM_CIBENCH_FUNCTIONAL_CONFIG=$(pwd)/configs/tests/functional_example.yaml
# Or copy to configs/tests/functional.yaml and set suite: true

enabled: true
suite: true

# 功能性指标推送（仅 daily 且非 dry-run 时生效）
functional_metrics:
  per_case: true

# 可选：显式声明服务能力（用于按能力跳过用例）；也可通过
# 环境变量 `VLLM_CIBENCH_CAPABILITIES` 传入，或由场景 features 派生。
capabilities:
  - chat.tools
  - chat.tool_choice
  - chat.tool_choice.by_name
  - chat.tool_calls.parallel
  - chat.response_format.json_object
  - chat.response_format.json_schema
  - chat.reasoning
  - chat.logprobs
  - completions.suffix
  - completions.best_of

cases:
  # Basic chat
  - id: chat_basic
    type: chat
    messages:
      - role: user
        content: "Say hello in one word."
    params:
      temperature: 0

  # Basic completions
  - id: comp_basic
    type: completions
    prompt: "Hello"
    params:
      max_tokens: 8

matrices:
  chat:
    - id_prefix: chat_bounds
      messages:
        - role: user
          content: "Summarize: vLLM is great."
      params_grid:
        temperature: [0.0, 1.0]
        top_p: [0.0, 1.0]
        top_k: [1, 8]
      expect_error: false
    - id_prefix: chat_stream_json
      messages:
        - role: user
          content: "Return JSON with key 'ok' true."
      params_grid:
        stream: [true]
        response_format: [{type: json_object}]
      expect_error: false
  completions:
    - id_prefix: comp_bounds
      prompt: "Say X"
      params_grid:
        logprobs: [false, true]
        top_logprobs: [1, 3]
      expect_error: false

negative:
  chat:
    - id_prefix: chat_invalid_top_p
      messages:
        - role: user
          content: "hi"
      params_list:
        - {top_p: 1.5}
      expect_error: true
    - id_prefix: chat_n_gt_best_of_stream
      messages:
        - role: user
          content: "hi"
      params_list:
        - {n: 2, best_of: 1, stream: true}
      expect_error: true
  completions:
    - id_prefix: comp_logprobs_bounds
      prompt: "hello"
      params_list:
        - {logprobs: true, top_logprobs: 0}
        - {logprobs: true, top_logprobs: 100}
      expect_error: true
