name: daily

on:
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:
    inputs:
      dry-run:
        description: 'Skip Pushgateway push'
        required: false
        default: 'false'
        type: boolean

jobs:
  run-matrix:
    runs-on: ubuntu-latest
    if: github.repository == 'dgy516/vllm_cibench'
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install -r requirements.txt
      - run: pip install -r requirements-dev.txt
      - name: Run daily matrix (with functional suite)
        env:
          PROM_PUSHGATEWAY_URL: ${{ secrets.PROM_PUSHGATEWAY_URL }}
          VLLM_CIBENCH_FUNCTIONAL_CONFIG: ${{ github.workspace }}/configs/tests/functional_example.yaml
        run: |
          ARGS=""
          if [ "${{ inputs.dry-run }}" = "true" ]; then
            ARGS="--dry-run"
          fi
          # 执行并落地结果 JSON，避免偶发错误中断矩阵执行
          set +e
          PYTHONPATH=src python -m vllm_cibench.run run-matrix --run-type daily $ARGS --timeout 1.0 > daily_matrix.json
          echo "Daily matrix finished with exit code $? (tolerated)."
        continue-on-error: true

      - name: Summarize and gate (accuracy ok, functional ok)
        run: |
          python - <<'PY'
          import json, os, sys
          p = 'daily_matrix.json'
          try:
            data = json.load(open(p, 'r', encoding='utf-8'))
          except Exception as e:
            print(f"Failed to read {p}: {e}")
            data = {}

          lines = []
          fail = False
          for sid, res in data.items():
            func = res.get('functional')
            acc = res.get('accuracy') or {}
            acc_ok = (acc.get('ok') is True)
            # 门禁：功能不为 failed，且 accuracy.ok=True（当存在 accuracy 时）
            if func == 'failed':
              fail = True
            if acc and not acc_ok:
              fail = True
            lines.append(f"{sid}: functional={func}, accuracy_ok={acc_ok}")

          summary = '\n'.join(f"- {l}" for l in lines) if lines else '- no results'
          with open(os.environ['GITHUB_STEP_SUMMARY'], 'a', encoding='utf-8') as fh:
            fh.write('### Daily Matrix Summary\n')
            fh.write(summary + '\n')

          if fail:
            print('Gate failed: functional failed or accuracy below threshold.')
            sys.exit(1)
          else:
            print('Gate satisfied.')
          PY

      - name: Upload artifacts (JSON and outputs)
        uses: actions/upload-artifact@v4
        with:
          name: daily-artifacts
          path: |
            daily_matrix.json
            artifacts/**
          if-no-files-found: warn
          retention-days: 30
