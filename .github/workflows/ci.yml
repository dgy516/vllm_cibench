name: ci
on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - run: pip install -r requirements-dev.txt
      - run: ruff check src tests
      - run: black --check src tests
      - run: isort --check-only src tests

  typecheck:
    name: typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - run: pip install -r requirements-dev.txt
      - run: mypy --strict src

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - run: pip install -r requirements-dev.txt
      - run: pytest -q -m "not slow"
      - name: orchestrator smoke (dry run)
        run: |
          python - <<'PY'
          import shutil, yaml
          from pathlib import Path
          src = Path('configs')
          root = Path('smoke_configs')
          dst = root / 'configs'
          shutil.copytree(src, dst, dirs_exist_ok=True)
          matrix = yaml.safe_load((dst / 'matrix.yaml').read_text())
          keep = 'local_single_qwen3-32b_guided_w8a8'
          matrix = {keep: matrix[keep]}
          (dst / 'matrix.yaml').write_text(yaml.safe_dump(matrix))
          PY
          PYTHONPATH=src python -m vllm_cibench.run run --scenario local_single_qwen3-32b_guided_w8a8 --run-type pr --root smoke_configs --dry-run --timeout 0.5 > smoke_run.json
          PYTHONPATH=src python -m vllm_cibench.run run-matrix --run-type pr --root smoke_configs --dry-run --timeout 0.5 > smoke_matrix.json
          cat smoke_run.json
          cat smoke_matrix.json
          python - <<'PY'
          import json, os
          run = json.load(open('smoke_run.json'))
          matrix = json.load(open('smoke_matrix.json'))
          lines = [f"single: func={run.get('functional')}, perf={bool(run.get('perf_metrics'))}"]
          for sid, res in matrix.items():
              lines.append(f"{sid}: func={res.get('functional')}, perf={bool(res.get('perf_metrics'))}")
          summary = '\n'.join(f"- {l}" for l in lines)
          with open(os.environ['GITHUB_STEP_SUMMARY'], 'a', encoding='utf-8') as fh:
              fh.write('### Orchestrator Smoke\n')
              fh.write(summary + '\n')
          PY

  gate:
    name: gate
    runs-on: ubuntu-latest
    needs: [lint, typecheck, test]
    steps:
      - run: echo "All required CI jobs passed."
